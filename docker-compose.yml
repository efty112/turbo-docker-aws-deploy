services:
  postgres:
    image: postgres
    container_name: postgres_db
    restart: always
    ports:
      - 5000:5432
    environment:
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=
    volumes:
      - turbo-app_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: turbo_backend
    ports:
      - 8080:8080
    environment:
      - DATABASE_URL=
    depends_on:
      postgres:
        condition: service_healthy
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      args:
        - DATABASE_URL=
    container_name: turbo_web
    environment:
      - DATABASE_URL=
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
  ws:
    build:
      context: .
      dockerfile: docker/Dockerfile.ws
    container_name: turbo_ws
    ports:
      - 3001:3001
    environment:
      - DATABASE_URL=
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  turbo-app_volume: